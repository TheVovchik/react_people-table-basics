{"version":3,"sources":["components/Navigation/NavigationLink/NavigationLink.tsx","components/Navigation/Navigation.tsx","App.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/PeopleList/PeopleTable/PersonLink/PersonLink.tsx","components/PeopleList/PeopleTable/PeopleTable.tsx","components/PeopleList/PeopleList.tsx","components/PageNotFound/PageNotFound.tsx","index.tsx"],"names":["NavigationLink","to","text","className","isActive","classNames","Navigation","role","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","PersonLink","PeopleTable","personLink","people","map","person","name","sex","born","died","fatherName","motherName","slug","mother","father","isWomen","isSelected","console","log","PeopleList","useState","isLoading","setIsLoading","hasError","setHasError","setPeople","isNoPeople","useMemo","length","isPeople","useParams","findMother","useCallback","peopleList","find","human","findFather","handlePeopleLoad","peopleListFromServer","currentPeopleList","useEffect","PageNotFound","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.81630785.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const NavigationLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { NavigationLink } from './NavigationLink';\n\nexport const Navigation: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavigationLink\n            to=\"/\"\n            text=\"Home\"\n          />\n\n          <NavigationLink\n            to=\"/people\"\n            text=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App: FC = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\n\nexport const PeoplePage: FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n  className: string,\n};\n\nexport const PersonLink: FC<Props> = ({ to, text, className }) => {\n  return (\n    <Link\n      to={to}\n      className={className}\n    >\n      {text}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { PersonLink } from './PersonLink';\nimport { ModifiedPerson } from '../../../types';\n\ntype Props = {\n  personLink: string;\n  people: ModifiedPerson[] | null;\n};\n\nexport const PeopleTable: FC<Props> = ({\n  personLink,\n  people,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people && people.map(person => {\n          const {\n            name,\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n            mother,\n            father,\n          } = person;\n          const isWomen = sex === 'f';\n          const isSelected = personLink === slug;\n\n          // eslint-disable-next-line no-console\n          console.log(personLink, isSelected);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': isSelected,\n              })}\n            >\n              <td\n                className={classNames(\n                  { 'has-text-danger': isWomen },\n                )}\n              >\n                <PersonLink\n                  to={`/people/${slug}`}\n                  text={name}\n                  className={isWomen ? 'has-text-danger' : ''}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              {mother\n                ? (\n                  <td>\n                    <PersonLink\n                      to={`/people/${mother.slug}`}\n                      text={mother.name}\n                      className=\"has-text-danger\"\n                    />\n                  </td>\n\n                )\n                : (\n                  <td>\n                    {motherName || '-'}\n                  </td>\n                )}\n\n              {father\n                ? (\n                  <td>\n                    <PersonLink\n                      to={`/people/${father.slug}`}\n                      text={father.name}\n                      className=\"\"\n                    />\n                  </td>\n                )\n                : (\n                  <td>\n                    {fatherName || '-'}\n                  </td>\n                )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import {\n  FC, useMemo, useCallback, useState, useEffect,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { ModifiedPerson, Person } from '../../types';\nimport { Loader } from '../Loader/Loader';\nimport { PeoplePage } from '../PeoplePage';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeopleList: FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [people, setPeople] = useState<ModifiedPerson[] | null>(null);\n  const isNoPeople = useMemo(\n    () => people?.length === 0 && !hasError && !isLoading,\n    [people, hasError, isLoading],\n  );\n  const isPeople = useMemo(\n    () => people?.length !== 0 && !hasError && !isLoading,\n    [people, hasError, isLoading],\n  );\n  const { personLink = '' } = useParams();\n\n  const findMother = useCallback((person: Person, peopleList: Person[]) => {\n    return peopleList.find(human => human.name === person.motherName) || null;\n  }, []);\n\n  const findFather = useCallback((person: Person, peopleList: Person[]) => {\n    return peopleList.find(human => human.name === person.fatherName) || null;\n  }, []);\n\n  const handlePeopleLoad = useCallback(async () => {\n    try {\n      const peopleListFromServer = await getPeople();\n      const currentPeopleList = peopleListFromServer.map(person => {\n        const mother = findMother(person, peopleListFromServer);\n        const father = findFather(person, peopleListFromServer);\n\n        return {\n          ...person,\n          father,\n          mother,\n        };\n      });\n\n      setIsLoading(false);\n      setPeople(currentPeopleList);\n    } catch {\n      setHasError(true);\n      setIsLoading(false);\n      // throw new Error('Unable to get data from server');\n    }\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setHasError(false);\n    handlePeopleLoad();\n  }, []);\n\n  return (\n    <>\n      <PeoplePage />\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeople\n            && (\n              <PeopleTable\n                people={people}\n                personLink={personLink}\n              />\n            )}\n        </div>\n      </div>\n\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeopleList } from './components/PeopleList';\nimport { PageNotFound } from './components/PageNotFound';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route\n            index\n            element={<HomePage />}\n          />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route\n              index\n              element={<PeopleList />}\n            />\n            <Route\n              path=\":personLink\"\n              element={<PeopleList />}\n            />\n          </Route>\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}